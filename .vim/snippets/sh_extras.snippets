snippet stdout
	2>&1 >/dev/null
snippet #! bash template simple
	#!/usr/bin/env bash
	set -euo pipefail
	
	usage() {
	    cat << EOF
	usage: $0 this_argument
	
	Describe the command here
	
	ARGS:
	   this_argument   Describe an argument here
	
	OPTIONS:
	   -e  Example option that is required
	   -h  Show this message
	EOF
	}
	
	# Initialize options
	example_opt=

	while getopts "he:" OPTION
	do
	    case $OPTION in
	        e)
	            example_opt=$OPTARG
	        h)
	            usage
	            exit 1
	            ;;
	        ?)
	            usage
	            exit 1
	            ;;
	    esac
	done

	if [ -z "$example_opt" ]; then
	    echo Example opt is required
	    exit 1
	fi

	this_argument=${@:$OPTIND:1}
	
	echo "$this_argument"
snippet #! bash template logging
	#!/usr/bin/env bash
	set -euo pipefail
	IFS=$'\n\t'
	
	#/ Usage:
	#/ Description:
	#/ Examples:
	#/ Options:
	#/   --help: Display this help message
	usage() { grep '^#/' "$0" | cut -c4- ; exit 0 ; }
	expr "$*" : ".*--help" > /dev/null && usage
	
	readonly LOG_FILE="/tmp/$(basename "$0").log"
	info()    { echo "[INFO]    $@" | tee -a "$LOG_FILE" >&2 ; }
	warning() { echo "[WARNING] $@" | tee -a "$LOG_FILE" >&2 ; }
	error()   { echo "[ERROR]   $@" | tee -a "$LOG_FILE" >&2 ; }
	fatal()   { echo "[FATAL]   $@" | tee -a "$LOG_FILE" >&2 ; exit 1 ; }
	
	cleanup() {
	  # Remove temporary files
	  # Restart services
	  # ...
	}

	main() {
	  # Script goes here
	  # ...
	}
	
	if [[ "${BASH_SOURCE[0]}" = "$0" ]]; then
	  trap cleanup EXIT
	  main()
	fi
